<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: coding | Arrow of Code]]></title>
  <link href="http://wafflespeanut.github.io/blog/categories/coding/atom.xml" rel="self"/>
  <link href="http://wafflespeanut.github.io/"/>
  <updated>2015-09-10T21:33:19+05:30</updated>
  <id>http://wafflespeanut.github.io/</id>
  <author>
    <name><![CDATA[Ravi Shankar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[100 shades of green: The journey of a coder...]]></title>
    <link href="http://wafflespeanut.github.io/blog/2015/09/07/100-shades-of-green-the-journey-of-a-coder-dot-dot-dot/"/>
    <updated>2015-09-07T18:33:18+05:30</updated>
    <id>http://wafflespeanut.github.io/blog/2015/09/07/100-shades-of-green-the-journey-of-a-coder-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been coding for about a year now. I&rsquo;ve danced with Python <em>(a lot!)</em> and nowadays, I&rsquo;m playing with Rust, although I&rsquo;ve also done some basic C &amp; Javascript. Anyways, I get a lot of questions from my fellow undergrads about how I got into coding in the first place, and yesterday, <a href="https://manishearth.github.io/">Manish</a> gave me the idea to blog about it.</p>

<p>Also, since my commit streak has reached 100 days (with 1k commits), I think now&rsquo;s a great time to share my story with y'all&hellip;</p>

<p><img src="/images/streak.png" alt="commit streak" /></p>

<p><small>On a side note, this post is intended for those who&rsquo;re about to get involved in the <em>art</em> of coding, though I assure the rest of you that it will be interesting for others as well.</small><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<!-- more -->


<h2>Good ol' days with the computer&hellip;</h2>

<p>When I got my first computer, all I ever wanted to do was play games (well, I still do, but I love other things too). Apart from that, I liked to paint (you know, lines, squares, circles, colors, wheee&hellip;). Though I did encounter C in my school days, I didn&rsquo;t know the purpose of it, because I simply didn&rsquo;t realize the powers of coding. The only thing that attracted me was HTML (4), because it can do some pretty stuff - that way, I realized that with some text I can make colorful things on a computer!</p>

<p>I discovered many things during my high school days, but the only thing that mattered the most was that characters in computers can do more than just coloring - that was the time when I played with matrices and generated prime numbers in C (basic stuff you learn in high-school). That was also the time when I had developed this weird desire to fiddle around the things which are hidden from plain sight. I just don&rsquo;t like it that way.</p>

<p>For instance, take the beautiful &ldquo;Microsoft Windows XP&rdquo; (the OS of my first computer) - the <code>C:\\</code> drive is forbidden by default, and it has a lot of files which are unknown to me. I had a friend who shared my trait of fiddling around with unknown files. Since his father owned an internet cafe, whenever we&rsquo;re lost, or screw up something (or get screwed up by a virus, mostly a worm), we get a solution almost immediately. Later, we take those problems to our school, so that we can screw up the computers in our labs (let&rsquo;s just say that we hated some of our teachers!).</p>

<p>That was the time when I also got interested in the command prompt (which I terribly hate nowadays). As an example, this tiny snippet which recursively walks inside a path and hides the contents was used often by us to drive the teachers and students crazy (for a month!).<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p>

<pre><code class="bat">attrib [path] +h +r +s /s /d
</code></pre>

<h2>As a newbie to the internet&hellip;</h2>

<p>It wasn&rsquo;t until college when I got my first laptop along with a <em>pathetic</em> excuse for an internet connection (which I still have). By the end of my fresher year, a great deal of things had happened.</p>

<p>I got into Stack Exchange, <a href="http://wp.me/p3OCmi-D">which had some great impacts on my personality</a> over the years (that&rsquo;s also where I met Manish). At the start, I had the motivation to explore the system, interact with a lot of users, and learn to contribute, but once that became handy, I got bored. Yeah, reading stuff on the internet, participating in a great community is awesome and all, but I needed something more - something that could keep me equipped when I&rsquo;m bored of reading.</p>

<p>I got excited about math and wanted to solve problems - it was right about that time when I discovered <a href="https://projecteuler.net/">Project Euler</a>. It demanded the users to code to solve the problems. I&rsquo;m sure every newbie coder gets interested in those problems, because it demands only the solution for a particular problem, which means you ought to guess an algorithm first (sometimes, it will be the awful bruteforce), try to implement it (when you&rsquo;ll discover more about the language of choice - with the help of <a href="https://stackoverflow.com/">Stackoverflow</a>, of course), get the result and then you can refine the algorithm (unlike SPOJ or Code Chef, which are designed to concentrate more on algorithms and data structures). In those days, I used C.</p>

<p>My sophomore year began with <a href="https://wafflescrazypeanut.wordpress.com">blogging</a> - when I was mostly writing about physics-ish stuff (whatever I got excited about) or my favorite experiences (or ranting about something). At this point, I knew about <em>Mathematica</em> and its glories. Luckily, the Wolfram community had offered plenty of documentation for it, that I was able to learn its basics pretty quickly.</p>

<p>Now, I had no reason to use C for solving the problems, since <em>Mathematica</em> had all the built-in functions available in hand. I used it to generate plots and some simple animations, which I later embedded in my blog posts. One thing led to another and soon, I was making animations for teaching my classmates to visualize things.<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p>

<p>Along the way, I also got fond of a markup language - which affected me so much, that I got addicted to just seeing its <em>beauty</em>. It was the awesome LaTeX! I used to prepare notes for some of my courses with it, just because I felt happier to read all those silly formulas in LaTeX. Once I got to know about its clockworks, I began using <a href="http://lyx.org">LyX</a> and <a href="http://geogebra.org">Geogebra</a> to speed things up.</p>

<h2>Hands on an easy, aesthetic &amp; powerful language&hellip;</h2>

<p>Then, I discovered Github. I didn&rsquo;t understand the point of it at first, and so I assumed it as a &ldquo;dropbox for coders&rdquo; - I never imagined the concept of version-control or open-source. Anyways, the repositories served nicely as a <em>backup place</em> for all my code.</p>

<p>I&rsquo;m a <em>perfectionist</em>, alright? I admire the beauty of things when they&rsquo;re neat, but I often struggle to maintain their clean state as time progresses. Since I realized that LaTeX seemed to consume most of my time, note-taking also came to an end. And, <em>Mathematica</em> (the only language I was currently working with) seemed too abstract, since it hides all the details from my view. Now, I wanted to know how things work behind the cloak, but I also don&rsquo;t wanna fall back to C. <em>(meh)</em></p>

<p>When I was a sophomore, I used to hang out a lot in our physics chatroom, <a href="https://chat.stackexchange.com/rooms/71/the-h-bar">the H-bar</a> and most often, I could hear about Python. When I asked about it, they told me that the scientific community is using Python most of the time (from handling the data to plotting the results), especially because it&rsquo;s easy. <em>&ldquo;Hmm, looks like something I should try out&hellip;&rdquo;</em>, and I got curious just like that.</p>

<p>By then, I somehow got interested in cryptography. After reading about the old <a href="https://en.wikipedia.org/wiki/Caesar_cipher">Caesar</a> &amp; <a href="https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher">Vig√®nere</a> ciphers, I got a desire to create my own cipher (that often happens if you get too <em>excited</em> about cryptography without thinking about the past few decades of research), and that little project of mine consumed my entire vacation at the end of my sophomore year.</p>

<p>On the brighter side, this was the point where an endless discovery was going on. As days passed, I dug deeper and deeper into Python. Some new idea kept popping up every now and then, and I immediately implemented it. Man, I was totally productive! As a free perk, I also <a href="https://wafflespeanut.github.io/scripts/site-old/sentinel">translated the code to Javascript</a> (by which I learned some HTML5 and JS along with a bit of CSS). This was also where my life as a coder began&hellip;</p>

<p>The day came soon, when I learned some stuff in public-key cryptography, when I realized about the depths of cryptography, when I had also finally decided to <strong>ditch all my work</strong> because it just seemed too <em>stupid</em> to keep on developing a nonsensical <em>beast</em> which does nothing but consumes more time and memory in the name of a &ldquo;<a href="https://github.com/Wafflespeanut/scripts/tree/master/python/AutomatonX">non-conformant pet cipher</a>&rdquo;! I had to <em>move on</em>. By then, I knew some serious stuff in Python (thanks to Stackoverflow which helped me to learn all the way down to its internals), and so I used it to reduce the work in my academic stuff - like grabbing data from the lab machines, minor computations, iterations and plotting (which simply took too much time in Excel - some of my classmates realized that later).</p>

<p>Every time I encountered a problem requiring repetitive steps, I used Python. Since Python can do many things (given the vast amount of packages it has) - I used it to crawl through webpages to download stuff, switched to Python for solving those old Project Euler problems, clean my files (and sometimes, dirty code). Like I said, I&rsquo;m a <em>perfectionist</em>.</p>

<p>After a few months, I got an idea (for another little project!). I often forget what happened every day (which is one of my problems which I had to solve) and so, I wanted something to keep track of my memories. That &ldquo;something&rdquo; was my next project - <a href="https://github.com/Wafflespeanut/biographer">a diary</a>. Apart from Mozilla, that project was something that consumed a great deal of time, and I&rsquo;ve molded it line by line over the months. Ideas popped up in the same way - <em>&ldquo;Let&rsquo;s have an option for searching!&rdquo;</em>, <em>&ldquo;Authentication per session would be a great idea!&rdquo;</em>, <em>&ldquo;Hmm, wouldn&rsquo;t it be wonderful to have <a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29">CBC</a> before shifting?&rdquo;</em>, and I implemented those as and whenever they cropped up in mind.<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></p>

<h2>Into an awesome community - open-source and beyond&hellip;</h2>

<p>Anyways, that thing had taken some of my time and since I was indulged in it, I never bothered to look into Project Euler, and so my problem-solving days were done (I simply didn&rsquo;t get the mood!). Now, I needed something else - something I&rsquo;ve never tried in my internet lifetime.</p>

<p>Then, I recalled Manish&rsquo;s talks about Mozilla, Rust, etc. He had often told me that Mozilla&rsquo;s one of the most welcoming communities to get involved. One of the most important things which Stack Exchange taught me is to <strong>&ldquo;search more before asking questions!&rdquo;</strong> Because, we often get silly questions at the site, where some users don&rsquo;t even bother to put some effort on their questions. The point is that it was pretty hard for me to ask questions (especially when it&rsquo;s a new place). Also, I had never heard of &ldquo;IRC&rdquo;.</p>

<p>I was afraid. The gigantic codebase and the numerous code it contained freaked me out! (as I&rsquo;ve never seen such a giant repository in my life! <em>&ldquo;Millions of lines of code? C'mon, really? Isn&rsquo;t it just a browser?&rdquo;</em>). I never understood the bugs, nor did I know how to patch it (happened just a few months back). Soon, my vacation began, and my sole aim was to get involved in a Mozilla codebase! <sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup></p>

<p>I got into IRC and discovered that they offered mentors for new users. I got one for myself, who even suggested me a &ldquo;good first bug&rdquo;, which took me some days to finally submit a patch. That also required me to get into Ubuntu and a new DVCS called <em>Mercurial</em>. My first bug explained me how things worked over there. It also came with a perk - I never used Windows from then on! I realized the awesomeness of Ubuntu! <a href="http://wp.me/p3OCmi-uA">That was it</a>, and later bugs became a piece of cake, thanks to those awesome Mozillians.</p>

<p>It was by that time Rust 1.0.0 was released. I&rsquo;ve never played with a low-level language. The release of Rust and its success was my motivation. I got excited about it, and immediately got indulged in it (with the help of the <a href="https://doc.rust-lang.org/">wonderful docs &amp; book</a>. Now, an idea popped up while reading about <a href="https://doc.rust-lang.org/book/rust-inside-other-languages.html">concurrency and FFI</a> in Rust (that was my first time reading about &ldquo;FFI&rdquo;, though I had some idea about concurrency). Anyways, that diary I&rsquo;d written was completely in Python. So, If I could somehow link it through FFI and hand over the searching to Rust (and utilize its concurrency), then I could save a lot of time. And, it did.</p>

<p>This task consumed a whole weekend of mine (but, it was worth it!). Though FFI was hard, I got help from a lot of Rustaceans (mostly at IRC for minor things, or Stackoverflow, when <a href="https://stackoverflow.com/q/31083223/2313792">things went out of hand</a>). I loved Rust so much (just like I loved Python), which is also why I never felt hopeless, and by the end of the day, I <a href="http://wafflespeanut.github.io/blog/2015/07/08/a-pythonist-getting-rusty-these-days-dot-dot-dot-part-2/">got the thing to work!</a> <em>(finally&hellip;)</em></p>

<h2>Coding everyday&hellip;</h2>

<p>There&rsquo;s something that I learned from my journey. Once I got into the art of coding with the help a language, jumping into other languages wasn&rsquo;t a big deal. Moreover, if you get involved in a project (open-source, or something of your own), then you&rsquo;ll more likely learn a great deal of stuff (though that cipher and my diary wasn&rsquo;t much useful, I did learn a hell lot of things while working in them).</p>

<p>Also, since I&rsquo;d gone for a high-level language (Python), I didn&rsquo;t have to worry about the types very much, but I did get into trouble when I tried to get into a low-level <em>beast</em> like Rust. Because, Rust doesn&rsquo;t <em>abstract away</em> many things like Python does, I had to do quite a few tasks by myself! Moreover, Rust&rsquo;s design made my coding pretty challenging, because of its strong static type system and its merciless borrow checker (among other things). <strong>I had to pay the iron price!</strong> (for my choice of a high-level language at the start). But, <a href="http://wafflespeanut.github.io/blog/2015/07/05/a-pythonist-getting-rusty-these-days-dot/">I had quite a lot of fun</a> while playing with it.</p>

<p>Nowadays, I&rsquo;m involved in the <a href="https://github.com/servo/servo">Servo browser engine</a>, to learn more about Rust, which gets pretty exciting every day. And, while I&rsquo;m playing with Rust, I&rsquo;ve also got back into C, because firstly, I&rsquo;ve realized the power of these low-level languages in terms of performance (plus, C doesn&rsquo;t have any abstractions at all!), and secondly, I&rsquo;m about to finish my college and industries only know about established languages like C/C++/Java. So, I gotta learn one of those to get a job <em>(sigh)</em>.<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></p>

<p><small>Thanks to Manish for <em>patiently</em> reviewing this post&hellip;</small></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>If you had grown in my locality (in your childhood), then all you know is that a computer (which you often see in school) is <em>&ldquo;something&rdquo;</em> where you can only type, draw, and play games - nothing more! I&rsquo;m not embarrassed to say that we were never curious!<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Well, we learned that from a virus (and that too because we never believed in the concept of an anti-virus (since everything is just the cause &amp; effect of code). This command is often utilized by a harmless worm which infects pen drives.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>It was required for a course, where we draw instantaneous vector diagrams of parts of machines. I had even <a href="https://www.youtube.com/playlist?list=PLpqCCxmTKpa1NBYfoEJlKb8X4fq0Pf6N9">made some (not so boring) videos</a> for the junior undergrads using those animations.<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>It&rsquo;s not a great <em>project</em> and all (I created that only to dig deeper into Python, and I have!). And yeah, I do write my story every day (I&rsquo;ve got about a year of stories now). I don&rsquo;t usually spend much time other than just recalling the events, and I just write a paragraph or two (like hints) - to just remind myself that something so nice/worse has happened on that day.<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>Meanwhile, I <a href="http://wp.me/p3OCmi-ws">got into a hackathon</a>, when I learned a lot of stuff - more JS and some frameworks - especially the MVCs like Django and Angular JS, and I had also figured out how Git worked.<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>Well, to be honest with you, based on the things I&rsquo;ve seen so far, I personally feel like C being quite easy, since I&rsquo;ve learned the <em>&ldquo;Rust&rdquo;</em>.<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
